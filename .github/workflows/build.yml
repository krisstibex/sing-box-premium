name: Update sing-box

on:
  workflow_dispatch: # 改为手动触发
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".github/workflows/*"

jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.go.outputs.version }}
    steps:
      - name: Get `Go` latest version
        id: go
        run: |
          echo version=$(curl -sSL https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | grep '"version"' | head -1 | awk -F'"' '{print $4}') >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    needs: go
    outputs:
      release_version: ${{ steps.release.outputs.release_version }}
      release_tags: ${{ steps.release.outputs.release_tags }}
    steps:
      - name: Checkout `main`
        uses: actions/checkout@v4
        with:
          repository: SagerNet/sing-box
          ref: main
          fetch-depth: 0

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Get `sing-box Release` version
        id: release
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box.git
          git fetch --tags sekai
          release_version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          echo release_version=$release_version >> $GITHUB_OUTPUT
          echo release_tags=with_quic with_grpc with_dhcp with_wireguard with_ech with_utls with_reality_server with_acme with_clash_api with_v2ray_api with_gvisor >> $GITHUB_OUTPUT

  release_cross:
    strategy:
      matrix:
        include:
          # linux
          - { name: linux-amd64, goos: linux, goarch: amd64, goamd64: v1 }
          - { name: linux-armv7, goos: linux, goarch: arm, goarm: 7 }
          - { name: linux-arm64, goos: linux, goarch: arm64 }
          # windows
          - { name: windows-amd64, goos: windows, goarch: amd64, goamd64: v1 }
          - { name: windows-arm64, goos: windows, goarch: arm64 }

      fail-fast: false
    runs-on: ubuntu-latest
    needs:
      - go
      - release
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      release_TAGS: ${{ needs.release.outputs.release_tags }}
      release_VERSION: ${{ needs.release.outputs.release_version }}
    steps:
      - name: Checkout `main`
        uses: actions/checkout@v4
        with:
          repository: SagerNet/sing-box
          ref: main
          fetch-depth: 1

      - name: Setup `Go`
        uses: actions/setup-go@v5
        with:
          go-version: ${{ needs.go.outputs.version }}

      - name: Revert golang1.23 commit for Windows 7/8
        if: ${{ matrix.goos == 'windows' }}
        run: |
          cd $(go env GOROOT)
          curl https://github.com/MetaCubeX/go/commit/9ac42137ef6730e8b7daca016ece831297a1d75b.diff | patch --verbose -p 1
          curl https://github.com/MetaCubeX/go/commit/21290de8a4c91408de7c2b5b68757b1e90af49dd.diff | patch --verbose -p 1
          curl https://github.com/MetaCubeX/go/commit/6a31d3fa8e47ddabc10bd97bff10d9a85f4cfb76.diff | patch --verbose -p 1
          curl https://github.com/MetaCubeX/go/commit/69e2eed6dd0f6d815ebf15797761c13f31213dd6.diff | patch --verbose -p 1

      - name: Build `sing-box Release` core
        id: build
        run: go build -v -trimpath -ldflags "-checklinkname=0 -X 'github.com/sagernet/sing-box/constant.Version=${release_VERSION}' -s -w -buildid=" -tags "${release_TAGS}" ./cmd/sing-box

      - name: Upload files to workspace
        uses: actions/upload-artifact@v4
        with:
          name: sing-box-release-${{ matrix.name }}
          path: sing-box*
          compression-level: 9

  push_sing-box:
    needs:
      - release_cross
      - release
    runs-on: ubuntu-latest
    env:
      release_VERSION: ${{ needs.release.outputs.release_version }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Download files from workspace
        uses: actions/download-artifact@v4
        with:
          path: ./tmp-sing-box/

      - name: Zip `sing-box` cores by `tar`
        run: |
          mkdir -p ./tmp-sing-box/compress/
          archs=(amd64 amd64-v3 armv5 armv6 armv7 arm64 mips-softfloat mipsle-hardfloat mipsle-softfloat)
          new_name=(amd64 amd64v3 armv5 armv6 armv7 armv8 mips-softfloat mipsle-hardfloat mipsle-softfloat)
          # `Release` cores
          for((i=0;i<9;i++));do
            mv -f "./tmp-sing-box/sing-box-release-linux-${archs[i]}/sing-box" ./tmp-sing-box/CrashCore
            chmod +x ./tmp-sing-box/CrashCore
            tar --no-same-owner -czf "./tmp-sing-box/compress/sing-box-release-linux-${new_name[i]}.tar.gz" -C ./tmp-sing-box/ ./CrashCore
          done

      - name: Move `sing-box` cores
        run: |
          mkdir -p ./sing-box/
          mv -f ./tmp-sing-box/compress/* ./sing-box/
          # `Release` cores for Windows
          mv -f ./tmp-sing-box/sing-box-release-windows-amd64/sing-box.exe ./sing-box/sing-box-release-windows-amd64.exe
          mv -f ./tmp-sing-box/sing-box-release-windows-amd64-v3/sing-box.exe ./sing-box/sing-box-release-windows-amd64v3.exe
          mv -f ./tmp-sing-box/sing-box-release-windows-arm64/sing-box.exe ./sing-box/sing-box-release-windows-arm64.exe

      - name: Release and upload `sing-box` assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: sing-box
          tag: sing-box
          overwrite: true
          body: "[sing-box](https://github.com/SagerNet/sing-box) Release with Proxy Provider"
          file_glob: true
          file: ./sing-box/*

      - name: Commit and push `sing-box` branch
        run: |
          cd ./sing-box/ || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b sing-box
          git add ./sing-box-release* && git commit -m "更新 sing-box 内核至 v${release_VERSION}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin sing-box

      - name: Purge jsDelivr CDN
        run: |
          cd ./sing-box/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@sing-box/${file}"
          done
